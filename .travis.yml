env:
  global:
    - TERM=dumb

notifications:
  email: false
git:
  quiet: true
  depth: false

language: java
jdk: openjdk8
node_js: lts/*
python: 3.7

service:
  - docker

os: linux
addons:
  apt:
    update: true
    packages:
      - jq
      - wget
      - curl
      - sudo
      - lsof
      - unzip
      - docker-ce
      - python3-pip
      - libxml2-utils

install: true
before_install:
  - export DISPLAY=:99.0
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 8001 8002 8080 5432
  #
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user --upgrade pip setuptools
  - pip install --user --upgrade docker-compose httpie
  - export root=$TRAVIS_BUILD_DIR

jobs:
  include:
    - stage: test
      name: vertx-hazelcast gradle
      script:
        - cd $root/vertx-hazelcast
        - bash gradlew clean installDist >/dev/null
        - bash ./build/install/vertx-hazelcast/bin/vertx-hazelcast &
        - PORT=8081 bash ./build/install/vertx-hazelcast/bin/vertx-hazelcast &
        - wait_for 8080 8081
        - http :8080 message=ololo >/dev/null
        - http :8080 message=trololo >/dev/null
        - http :8081 message=ololo >/dev/null
        - http :8081 message=trololo >/dev/null
        - stop_any 8080 8081
    - stage: test
      name: vertx-hazelcast maven
      script:
        - cd $root/vertx-hazelcast
        - bash mvnw clean package >/dev/null
        - java -jar target/*-all.jar &
        - PORT=8081 java -jar target/*-all.jar &
        - wait_for 8080 8081
        - http :8080 message=ololo8080 >/dev/null
        - http :8080 message=trololo8080 >/dev/null
        - http :8081 message=ololo8081 >/dev/null
        - http :8081 message=trololo8081 >/dev/null
        - stop_any 8080 8081
    - stage: test
      name: kotlin-vertx maven
      script:
        - cd $root/kotlin-vertx
        - ./mvnw >/dev/null
        - java -jar target/*-all.jar &
        - wait_for 8080
        - http :8080/type/he/anything/you/want
        - stop_any 8080
    - stage: test
      name: kotlin-vertx gradle
      script:
        - cd $root/kotlin-vertx
        - ./gradlew >/dev/null
        - java -jar build/libs/*-all.jar &
        - wait_for 8080
        - http :8080/type/he/anything/you/want
        - stop_any 8080
    - stage: test
      name: java-vertx maven
      script:
        - cd $root/java-vertx
        - ./mvnw
        - java -jar target/*-all.jar &
        - wait_for 8080
        - http :8080/type/he/anything/you/want
        - stop_any 8080
    - stage: test
      name: java-vertx gradle
      script:
        - cd $root/java-vertx
        - ./gradlew
        - java -jar build/libs/*-all.jar &
        - wait_for 8080
        - http :8080/type/he/anything/you/want
        - stop_any 8080
    - stage: test
      name: generator-jvm-java-vertx maven
      script:
        - cd $root/generator-jvm-java-vertx
        - ./mvnw
        - java -jar target/*-all.jar &
        - wait_for 8080
        - http :8080/type/he/anything/you/want
        - stop_any 8080
        - ./gradlew
    - stage: test
      name: generator-jvm-java-vertx gradle
      script:
        - cd $root/generator-jvm-java-vertx
        # getting-started-jvm-vertx
        - cd $root/getting-started-jvm-vertx
        - ./gradlew clean build
    - stage: test
      name: reactive-microservices-jvm-vertx gradle
      script:
        - cd $root/reactive-microservices-jvm-vertx
        - ./gradlew clean build
    - stage: deploy
      name: build adoc with maven and deploy
      script:
        - echo deploy...
      before_deploy:
        - cd $root/
        - ./mvnw
      env:
        global:
          secure: zN4w+Wet1Qi1zAlxjFz1plxPlm5R2kcRIfYdbb5Ao5XaST8F6MufsxPDZsCB6LJN6srSeg469TVP0QBfiB9ZYyoqd80rdDXoNMKeSVrhEsrRGs9JfJh97RlY8tesx1t60OuI9mTg+PDZFFVQz8BmK6zOgEhyO3/WNLKk9gTVAn0i34Ogv71GbXQEu7IfSu7XqxxSzRBMD/ldrUlkbyo/tMmv5wwsd1bovk2u65hWZFXlu0b8EsDwk62AvGIaWAyB0v5oBvm8zDXivZjEwRKVqC3LwPjC6JwXUfHY83W4kOSb3KXayDpAxpLUgI8jBu9pm9kHZWOwz5890mYaBJZaKyAu51Gdn094kE++RFOtgioCF7dVAB+zcm4Oak1sMp8h2NkGq91qXDDDGP7x/p3OtQZvYfggeEtFUOhrW127Lbu7K7kUFaZ9RfdiMzBOCZQYhKzJassXInZ8qL5dWLs0a8q4ib6XzSmXG0LCPpTcMrOC3XMEOMt2TQQMz/DqFy6ieEgKY9EJSOXqs36ILSPdqlqBwNJNxWTg10766QIik5jzBRh2vi6UXywkQ+O12oo8q45EHWpjTOOUsdVjkHnixWEN+TAes7nuSCfrxR6Ln7j75m2jwrW5NemVMUo3Z47ax8x2l/B6zjm7dzWZYWU162WqSS2YyxjbSHPd4jAgboo=
      deploy:
        provider: pages
        skip-cleanup: true
        # travis encrypt GITHUB_TOKEN=<your github repo token> --add
        github-token: "$GITHUB_TOKEN"
        keep-history: true
        on:
          branch: master
        local-dir: ./target/generated-docs
        target_branch: gh-pages

before_cache:
  - find ~/.gradle -name "fileHashes.bin" -print0 | xargs -0 rm -rfv '{}'
  - for item in $(find ~/.gradle -name "*.lock") ; do rm -rfv $item ; done

cache:
  pip: true
  packages: true
  directories:
    - ~/.m2
    - ~/.gradle
    - ~/.docker
    - ~/.local/daggerok
